# Legal Celery Worker - Simplified Configuration (Production-like)
# ==============================================================

image:
  repository: legal-retrieval/backend
  tag: "latest"
  pullPolicy: Never

replicaCount: 1

env:
  DOCKER_ENV: "true"
  APP_NAME: "Legal Retrieval Worker"
  DEBUG: "true"
  LOG_LEVEL: "INFO"
  
  # Database connections (Full K8s cluster DNS names matching backend)
  MONGO_HOST: "legal-mongodb.data-service.svc.cluster.local"
  MONGO_PORT: "27017"
  MONGO_USER: "root"
  MONGO_PASSWORD: "password123"
  MONGO_DATABASE: "legaldb"
  MONGO_AUTH_SOURCE: "admin"
  
  # Redis with full K8s cluster DNS name (DNS fallback handled in settings.py)
  REDIS_HOST: "legal-redis-master.data-service.svc.cluster.local"
  REDIS_PORT: "6379"
  
  # Qdrant with full K8s cluster DNS name
  QDRANT_HOST: "legal-qdrant.data-service.svc.cluster.local"
  QDRANT_PORT: "6333"
  
  # Celery configuration using environment variables (DNS fallback in settings.py)
  CELERY_QUEUES: "rag_queue,embed_queue,retrieval_queue,link_extract_queue"
  CELERY_CONCURRENCY: "2"
  CELERY_LOGLEVEL: "info"
  CELERY_POOL: "eventlet"
