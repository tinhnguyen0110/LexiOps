# Legal Frontend - Simplified Configuration (Production-like)
# ==========================================================

image:
  repository: legal-retrieval/frontend
  tag: "latest"
  pullPolicy: Never

replicaCount: 1

service:
  type: ClusterIP
  port: 80
  targetPort: 80

# Application configuration
config:
  # API configuration
  apiBaseUrl: "http://legal-backend-api.application.svc.cluster.local:8000"
  apiTimeout: "30000"
  
  # App configuration
  appTitle: "Legal Retrieval System (Development)"
  appDescription: "AI-powered legal document retrieval and chat system"
  appVersion: "1.0.0"
  
  # Feature flags
  enableChat: "true"
  enableDocumentSearch: "true"
  enableHistory: "true"
env:
  REACT_APP_API_URL: "http://legal-backend-api.application.svc.cluster.local:8000"
  REACT_APP_WS_URL: "ws://legal-backend-api.application.svc.cluster.local:8000"

# Nginx configuration
nginx:
  enabled: true
  config: |
    events {
        worker_connections 1024;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Temporary file paths in writable directory
        client_body_temp_path /tmp/client_body;
        proxy_temp_path /tmp/proxy;
        fastcgi_temp_path /tmp/fastcgi;
        uwsgi_temp_path /tmp/uwsgi;
        scgi_temp_path /tmp/scgi;
        
        # PID file in writable location
        pid /tmp/nginx.pid;
        
        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html index.htm;
        
        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json
            application/xml
            image/svg+xml;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # API proxy to backend
        location /api/ {
            proxy_pass http://legal-backend-api.application.svc.cluster.local:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            
            # CORS headers for development
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # WebSocket proxy for real-time features
        location /ws/ {
            proxy_pass http://legal-backend-api.application.svc.cluster.local:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }
        
        # Static files with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
        }
        
        # React app routing
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Metrics endpoint for monitoring
        location /metrics {
            access_log off;
            return 200 "# HELP nginx_up Nginx status\n# TYPE nginx_up gauge\nnginx_up 1\n";
            add_header Content-Type text/plain;
        }
    }

# Resource configuration
resources:
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "200m"

# Autoscaling configuration (disabled for development)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Health check configuration
healthCheck:
  enabled: true
  path: "/health"
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true
  path: "/"
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# Security context - container level
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL

# Security context - pod level  
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  fsGroup: 101

# Volume configuration
volumes:
  - name: tmp
    emptyDir: {}
  - name: nginx-cache
    emptyDir: {}

volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: nginx-cache
    mountPath: /var/cache/nginx

# Node selector and scheduling
nodeSelector: {}
tolerations: []
affinity: {}

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "80"
  prometheus.io/path: "/metrics"

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Network policy
networkPolicy:
  enabled: false

# Ingress configuration (for development)
ingress:
  enabled: false
  className: "nginx"
  annotations: {}
  hosts:
    - host: legal-frontend-dev.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Pod disruption budget
podDisruptionBudget:
  enabled: false
