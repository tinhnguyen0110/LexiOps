# Legal Backend API - Simplified Configuration
# ===========================================

# Legal Backend API - System Configuration Only
# ============================================

component: api

image:
  repository: legal-chatbot-backend
  tag: "dns-fix-v1"
  pullPolicy: Never

replicaCount: 1

service:
  type: ClusterIP
  port: 8000

# System Environment Variables (non-secret)
env:
  DOCKER_ENV: "true"
  APP_NAME: "Legal Retrieval System"
  DEBUG: "true"
  LOG_LEVEL: "INFO"
  API_V1_STR: "/api"
  HOST: "0.0.0.0"
  PORT: "8000"
  
  # Database connections (non-secret parts)
  MONGO_URI: "mongodb://root@legal-mongodb.data-service.svc.cluster.local:27017/legaldb"
  MONGO_DATABASE: "legaldb"
  MONGO_USER: "root"
  
  REDIS_HOST: "10.96.109.108"
  REDIS_PORT: "6379"
  REDIS_DB_DEFAULT: "0"
  REDIS_DB_WS: "1"
  REDIS_DB_RETRIEVAL: "2"
  REDIS_DB_CELERY: "3"
  REDIS_DB_RESULT: "4"
  
  QDRANT_HOST: "legal-qdrant.data-service.svc.cluster.local"
  QDRANT_PORT: "6333"
  QDRANT_COLLECTION: "legal_documents"
  
  # OpenAI Configuration (non-secret)
  OPENAI_MODEL: "gpt-3.5-turbo"
  OPENAI_EMBEDDING_MODEL: "text-embedding-ada-002"
  
  # Celery configuration
  CELERY_TASK_SERIALIZER: "json"
  CELERY_RESULT_SERIALIZER: "json"
  CELERY_ACCEPT_CONTENT: "application/json"
  CELERY_TIMEZONE: "Asia/Ho_Chi_Minh"
  
  # API configuration
  CORS_ORIGINS: '["http://localhost:3000", "http://localhost:5173", "http://legal-frontend.application.svc.cluster.local"]'
  UVICORN_WORKERS: "1"
  WORKER_TIMEOUT: "300"
  
  # Performance configuration
  WORKER_MEMORY_LIMIT: "512MB"
  MAX_CONCURRENT_TASKS: "10"
  EMBEDDING_BATCH_SIZE: "100"
  
  # Development configuration
  RELOAD: "true"
  HOT_RELOAD: "true"

# Secrets will be injected via envFrom in deployment template
envFrom:
  - secretRef:
      name: legal-secrets
  - configMapRef:
      name: backend-config
      optional: true

# Non-secret environment variables
environment:
  QDRANT_URL: "http://legal-qdrant:6333"

# Simple health check
healthCheck:
  enabled: true
  path: "/health"

readinessProbe:
  enabled: false
  path: "/ready"
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# Security context - container level
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL

# Security context - pod level
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Volume configuration
volumes:
  - name: tmp
    emptyDir: {}
  - name: cache
    emptyDir: {}

volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: cache
    mountPath: /app/cache

# Node selector and scheduling
nodeSelector: {}
tolerations: []
affinity: {}

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8000"
  prometheus.io/path: "/metrics"

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Network policy
networkPolicy:
  enabled: false

# Database Connections
mongodb:
  url: "mongodb://legal-mongodb.data-service.svc.cluster.local:27017/legal_db"
  host: "legal-mongodb.data-service.svc.cluster.local"
  port: "27017"
  database: "legal_db"
  username: ""
  password: ""

redis:
  url: "redis://10.96.109.108:6379"
  host: "10.96.109.108"
  port: "6379"
  password: ""

# Vector Database
qdrant:
  url: "http://legal-qdrant.data-service.svc.cluster.local:6333"
  host: "legal-qdrant.data-service.svc.cluster.local"
  port: "6333"

# Model Configuration
model:
  embedding: "sentence-transformers/all-MiniLM-L6-v2"
  llm: "gpt-3.5-turbo"

# Performance Configuration
performance:
  maxConcurrentRequests: 10
  requestTimeout: 300
  workerThreads: 1

# OpenAI Configuration
openai:
  apiKey: ""  # Set this in production

# Auth configuration
auth:
  jwtSecret: ""  # Set this in production

# Logging configuration
logging:
  level: "INFO"
  format: "json"
  requestLogging: true

# Ingress configuration
ingress:
  enabled: false  # Disabled for development
  className: "nginx"
  annotations: {}
  hosts:
    - host: api.legal-retrieval.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Secrets (empty for development)
secrets: {}
