---
# Source: legal-backend/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: legal-backend-api-secret
  labels:
    helm.sh/chart: legal-backend-1.0.0
    app.kubernetes.io/name: legal-backend
    app.kubernetes.io/instance: legal-backend-api
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  # API Keys
  # JWT Secret
---
# Source: legal-backend/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: legal-backend-api-config
  labels:
    helm.sh/chart: legal-backend-1.0.0
    app.kubernetes.io/name: legal-backend
    app.kubernetes.io/instance: legal-backend-api
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  # Logging configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  
  # Redis configuration
  REDIS_HOST: "legal-redis-master.data-service.svc.cluster.local"
  REDIS_PORT: "6379"
  
  # MongoDB configuration
  MONGO_HOST: "legal-mongodb.data-service.svc.cluster.local"
  MONGO_PORT: "27017"
  MONGO_DB: "legal_db"
  
  # Qdrant configuration
  QDRANT_HOST: "legal-qdrant.data-service.svc.cluster.local"
  QDRANT_PORT: "6333"
  
  # Model configuration
  EMBEDDING_MODEL: "sentence-transformers/all-MiniLM-L6-v2"
  LLM_MODEL: "gpt-3.5-turbo"
  
  # Celery configuration
  CELERY_BROKER_URL: "redis://legal-redis-master.data-service.svc.cluster.local:6379/0"
  CELERY_RESULT_BACKEND: "redis://legal-redis-master.data-service.svc.cluster.local:6379/0"
  
  # Performance configuration
  MAX_CONCURRENT_REQUESTS: "10"
  TIMEOUT_SECONDS:
---
# Source: legal-backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: legal-backend-api-api
  labels:
    helm.sh/chart: legal-backend-1.0.0
    app.kubernetes.io/name: legal-backend
    app.kubernetes.io/instance: legal-backend-api
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: api
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: legal-backend
    app.kubernetes.io/instance: legal-backend-api
    app.kubernetes.io/component: api
---
# Source: legal-backend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: legal-backend-api
  labels:
    helm.sh/chart: legal-backend-1.0.0
    app.kubernetes.io/name: legal-backend
    app.kubernetes.io/instance: legal-backend-api
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: legal-backend
      app.kubernetes.io/instance: legal-backend-api
      component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: legal-backend
        app.kubernetes.io/instance: legal-backend-api
        component: api
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: legal-backend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            fsGroup: 1000
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: "legal-retrieval/backend:latest"
          imagePullPolicy: Never
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: API_V1_STR
              value: "/api"
            - name: APP_NAME
              value: "Legal Retrieval System"
            - name: CELERY_ACCEPT_CONTENT
              value: "application/json"
            - name: CELERY_RESULT_SERIALIZER
              value: "json"
            - name: CELERY_TASK_SERIALIZER
              value: "json"
            - name: CELERY_TIMEZONE
              value: "Asia/Ho_Chi_Minh"
            - name: CORS_ORIGINS
              value: "[\"http://localhost:3000\", \"http://localhost:5173\", \"http://legal-frontend.application.svc.cluster.local\"]"
            - name: DEBUG
              value: "true"
            - name: DOCKER_ENV
              value: "true"
            - name: EMBEDDING_BATCH_SIZE
              value: "100"
            - name: HOST
              value: "0.0.0.0"
            - name: HOT_RELOAD
              value: "true"
            - name: LOG_LEVEL
              value: "INFO"
            - name: MAX_CONCURRENT_TASKS
              value: "10"
            - name: MONGO_DATABASE
              value: "legaldb"
            - name: MONGO_URI
              value: "mongodb://legal_user@legal-mongodb.data-service.svc.cluster.local:27017/legaldb"
            - name: MONGO_URL
              value: "mongodb://localhost:27017/legaldb"
            - name: MONGO_USER
              value: "legal_user"
            - name: OPENAI_EMBEDDING_MODEL
              value: "text-embedding-ada-002"
            - name: OPENAI_MODEL
              value: "gpt-3.5-turbo"
            - name: PORT
              value: "8000"
            - name: QDRANT_COLLECTION
              value: "legal_documents"
            - name: QDRANT_HOST
              value: "legal-qdrant.data-service.svc.cluster.local"
            - name: QDRANT_PORT
              value: "6333"
            - name: QDRANT_URL
              value: "http://legal-qdrant:6333"
            - name: REDIS_DB_CELERY
              value: "3"
            - name: REDIS_DB_DEFAULT
              value: "0"
            - name: REDIS_DB_RESULT
              value: "4"
            - name: REDIS_DB_RETRIEVAL
              value: "2"
            - name: REDIS_DB_WS
              value: "1"
            - name: REDIS_HOST
              value: "legal-redis-master.data-service.svc.cluster.local"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_URL
              value: "redis://localhost:6379/0"
            - name: REDIS_URL_RETRIEVAL
              value: "redis://localhost:6379/2"
            - name: REDIS_URL_WS
              value: "redis://localhost:6379/1"
            - name: RELOAD
              value: "true"
            - name: UVICORN_WORKERS
              value: "1"
            - name: WORKER_MEMORY_LIMIT
              value: "512MB"
            - name: WORKER_TIMEOUT
              value: "300"
          envFrom:
            - secretRef:
                name: legal-backend-secret
            - configMapRef:
                name: legal-backend-api-config
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}

