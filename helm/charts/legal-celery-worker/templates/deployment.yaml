apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "legal-celery-worker.fullname" . }}-{{ .Values.workerType | default "worker" }}
  labels:
    {{- include "legal-celery-worker.labels" . | nindent 4 }}
    worker-type: {{ .Values.workerType | default "worker" }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "legal-celery-worker.selectorLabels" . | nindent 6 }}
      worker-type: {{ .Values.workerType | default "worker" }}
  template:
    metadata:
      labels:
        {{- include "legal-celery-worker.selectorLabels" . | nindent 8 }}
        worker-type: {{ .Values.workerType | default "worker" }}
    spec:
      serviceAccountName: {{ include "legal-celery-worker.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}-{{ .Values.workerType | default "worker" }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bash
            - -c
            - |
              echo "ðŸ”§ Starting {{ .Values.env.APP_NAME }}..."
              echo "Worker Type: {{ .Values.workerType | default "worker" }}"
              echo "Queues: {{ .Values.env.CELERY_QUEUES }}"
              python /app/wait-for-services.py
              exec celery -A app.workers.{{ .Values.workerType | default "worker" }}_worker worker \
                --loglevel={{ .Values.worker.logLevel }} \
                --pool={{ .Values.worker.pool }} \
                --queues={{ .Values.env.CELERY_QUEUES }} \
                --concurrency={{ .Values.worker.concurrency }} \
                --max-tasks-per-child=1000 \
                --prefetch-multiplier=1
          env:
            - name: DOCKER_ENV
              value: "true"
            - name: DEBUG
              value: "true"
            - name: LOG_LEVEL
              value: "INFO"
            - name: MONGO_URI
              value: "mongodb://admin:password123@legal-mongodb.data-service.svc.cluster.local:27017/legal_chatbot_db?authSource=admin"
            - name: QDRANT_URL
              value: "http://legal-qdrant.data-service.svc.cluster.local:6333"
            - name: REDIS_URL
              value: "redis://legal-redis-master.data-service.svc.cluster.local:6379/0"
            - name: CELERY_BROKER_URL
              value: "redis://legal-redis-master.data-service.svc.cluster.local:6379/3"
            - name: CELERY_RESULT_BACKEND
              value: "redis://legal-redis-master.data-service.svc.cluster.local:6379/4"
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          envFrom:
            - secretRef:
                name: legal-celery-worker-secret
            - configMapRef:
                name: {{ include "legal-celery-worker.fullname" . }}-config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
